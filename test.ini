[app:main]
use = egg:asset_tracker
sqlalchemy.url = sqlite:///database.sqlite
retry.attempts = 3
database.extensions =
    invisibleroads_macros_database.SpatialiteExtension

application.environment =
secret.length = 32

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    appa_auth_consumer
    asset_format_dss
    asset_report_risks
    asset_report_tasks

client_cache.http.expiration_time_in_seconds = 3600
server_cache.function.backend = dogpile.cache.memory
server_cache.function.expiration_time = 3600

asset.id.length = 8

redis.sessions.secret = ${REDIS_SESSIONS_SECRET}
redis.sessions.url = redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DATABASE}
redis.sessions.cookie_name = s
redis.sessions.cookie_secure = True
redis.sessions.cookie_httponly = True
redis.sessions.timeout = 43200
redis.sessions.prefix = s-

appa_auth_consumer.mock = False
appa_auth_consumer.cookie_secure = False
appa_auth_consumer.cookie_httponly = False
appa_auth_consumer.auth_providers = appa
appa_auth_consumer.auth_provider.appa.auth_scopes = asset.read asset.write
appa_auth_consumer.auth_provider.appa.consumer_key = ${AUTH_CONSUMER_KEY}
appa_auth_consumer.auth_provider.appa.consumer_secret = ${AUTH_CONSUMER_SECRET}
appa_auth_consumer.auth_provider.appa.form_url = ${AUTH_URL}/o/authorize/
appa_auth_consumer.auth_provider.appa.token_url = ${AUTH_URL}/o/token/
appa_auth_consumer.auth_provider.appa.resource_url = ${AUTH_URL}/members/info/

[server:main]
use = egg:waitress#main
listen = *:5000
url_scheme = https
[pshell]
setup = invisibleroads_records.shells.setup
m = asset_tracker.models
[alembic]
script_location = asset_tracker/migrations
file_template = %%(year)d%%(month).2d%%(day).2d-%%(rev)s

[loggers]
keys = root, asset_tracker, sqlalchemy
[handlers]
keys = console
[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
[logger_asset_tracker]
level = DEBUG
handlers =
qualname = asset_tracker
[logger_sqlalchemy]
level = DEBUG
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
